// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: invocation.proto

#include "invocation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_invocation_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetStateRequest_invocation_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_invocation_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetStateResponse_invocation_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_invocation_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InvocationRequest_invocation_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_invocation_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InvocationResponse_invocation_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_invocation_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PutStateRequest_invocation_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_invocation_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PutStateResponse_invocation_2eproto;
namespace invocation {
class ChaincodeWrapperMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChaincodeWrapperMessage> _instance;
  const ::invocation::InvocationRequest* invocation_request_;
  const ::invocation::GetStateResponse* get_state_response_;
  const ::invocation::PutStateResponse* put_state_response_;
} _ChaincodeWrapperMessage_default_instance_;
class InvocationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvocationRequest> _instance;
} _InvocationRequest_default_instance_;
class GetStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetStateResponse> _instance;
} _GetStateResponse_default_instance_;
class PutStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutStateResponse> _instance;
} _PutStateResponse_default_instance_;
class ChaincodeProxyMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChaincodeProxyMessage> _instance;
  const ::invocation::InvocationResponse* invocation_response_;
  const ::invocation::GetStateRequest* get_state_request_;
  const ::invocation::PutStateRequest* put_state_request_;
} _ChaincodeProxyMessage_default_instance_;
class InvocationResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvocationResponse> _instance;
} _InvocationResponse_default_instance_;
class GetStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetStateRequest> _instance;
} _GetStateRequest_default_instance_;
class PutStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutStateRequest> _instance;
} _PutStateRequest_default_instance_;
}  // namespace invocation
static void InitDefaultsChaincodeWrapperMessage_invocation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invocation::_ChaincodeWrapperMessage_default_instance_;
    new (ptr) ::invocation::ChaincodeWrapperMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invocation::ChaincodeWrapperMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ChaincodeWrapperMessage_invocation_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsChaincodeWrapperMessage_invocation_2eproto}, {
      &scc_info_InvocationRequest_invocation_2eproto.base,
      &scc_info_GetStateResponse_invocation_2eproto.base,
      &scc_info_PutStateResponse_invocation_2eproto.base,}};

static void InitDefaultsInvocationRequest_invocation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invocation::_InvocationRequest_default_instance_;
    new (ptr) ::invocation::InvocationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invocation::InvocationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InvocationRequest_invocation_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInvocationRequest_invocation_2eproto}, {}};

static void InitDefaultsGetStateResponse_invocation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invocation::_GetStateResponse_default_instance_;
    new (ptr) ::invocation::GetStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invocation::GetStateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetStateResponse_invocation_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetStateResponse_invocation_2eproto}, {}};

static void InitDefaultsPutStateResponse_invocation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invocation::_PutStateResponse_default_instance_;
    new (ptr) ::invocation::PutStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invocation::PutStateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PutStateResponse_invocation_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPutStateResponse_invocation_2eproto}, {}};

static void InitDefaultsChaincodeProxyMessage_invocation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invocation::_ChaincodeProxyMessage_default_instance_;
    new (ptr) ::invocation::ChaincodeProxyMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invocation::ChaincodeProxyMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ChaincodeProxyMessage_invocation_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsChaincodeProxyMessage_invocation_2eproto}, {
      &scc_info_InvocationResponse_invocation_2eproto.base,
      &scc_info_GetStateRequest_invocation_2eproto.base,
      &scc_info_PutStateRequest_invocation_2eproto.base,}};

static void InitDefaultsInvocationResponse_invocation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invocation::_InvocationResponse_default_instance_;
    new (ptr) ::invocation::InvocationResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invocation::InvocationResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InvocationResponse_invocation_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInvocationResponse_invocation_2eproto}, {}};

static void InitDefaultsGetStateRequest_invocation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invocation::_GetStateRequest_default_instance_;
    new (ptr) ::invocation::GetStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invocation::GetStateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetStateRequest_invocation_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetStateRequest_invocation_2eproto}, {}};

static void InitDefaultsPutStateRequest_invocation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::invocation::_PutStateRequest_default_instance_;
    new (ptr) ::invocation::PutStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::invocation::PutStateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PutStateRequest_invocation_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPutStateRequest_invocation_2eproto}, {}};

void InitDefaults_invocation_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ChaincodeWrapperMessage_invocation_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InvocationRequest_invocation_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetStateResponse_invocation_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PutStateResponse_invocation_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChaincodeProxyMessage_invocation_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InvocationResponse_invocation_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetStateRequest_invocation_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PutStateRequest_invocation_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_invocation_2eproto[8];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_invocation_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_invocation_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_invocation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invocation::ChaincodeWrapperMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::invocation::ChaincodeWrapperMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::invocation::ChaincodeWrapperMessageDefaultTypeInternal, invocation_request_),
  offsetof(::invocation::ChaincodeWrapperMessageDefaultTypeInternal, get_state_response_),
  offsetof(::invocation::ChaincodeWrapperMessageDefaultTypeInternal, put_state_response_),
  PROTOBUF_FIELD_OFFSET(::invocation::ChaincodeWrapperMessage, message_oneof_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invocation::InvocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::invocation::InvocationRequest, chaincode_uuid_),
  PROTOBUF_FIELD_OFFSET(::invocation::InvocationRequest, function_name_),
  PROTOBUF_FIELD_OFFSET(::invocation::InvocationRequest, arguments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invocation::GetStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::invocation::GetStateResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invocation::PutStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::invocation::PutStateResponse, acknowledgement_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invocation::ChaincodeProxyMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::invocation::ChaincodeProxyMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::invocation::ChaincodeProxyMessageDefaultTypeInternal, invocation_response_),
  offsetof(::invocation::ChaincodeProxyMessageDefaultTypeInternal, get_state_request_),
  offsetof(::invocation::ChaincodeProxyMessageDefaultTypeInternal, put_state_request_),
  PROTOBUF_FIELD_OFFSET(::invocation::ChaincodeProxyMessage, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invocation::InvocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::invocation::InvocationResponse, execution_response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invocation::GetStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::invocation::GetStateRequest, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::invocation::PutStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::invocation::PutStateRequest, key_),
  PROTOBUF_FIELD_OFFSET(::invocation::PutStateRequest, value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::invocation::ChaincodeWrapperMessage)},
  { 9, -1, sizeof(::invocation::InvocationRequest)},
  { 17, -1, sizeof(::invocation::GetStateResponse)},
  { 23, -1, sizeof(::invocation::PutStateResponse)},
  { 29, -1, sizeof(::invocation::ChaincodeProxyMessage)},
  { 38, -1, sizeof(::invocation::InvocationResponse)},
  { 44, -1, sizeof(::invocation::GetStateRequest)},
  { 50, -1, sizeof(::invocation::PutStateRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::invocation::_ChaincodeWrapperMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::invocation::_InvocationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::invocation::_GetStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::invocation::_PutStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::invocation::_ChaincodeProxyMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::invocation::_InvocationResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::invocation::_GetStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::invocation::_PutStateRequest_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_invocation_2eproto = {
  {}, AddDescriptors_invocation_2eproto, "invocation.proto", schemas,
  file_default_instances, TableStruct_invocation_2eproto::offsets,
  file_level_metadata_invocation_2eproto, 8, file_level_enum_descriptors_invocation_2eproto, file_level_service_descriptors_invocation_2eproto,
};

const char descriptor_table_protodef_invocation_2eproto[] =
  "\n\020invocation.proto\022\ninvocation\"\337\001\n\027Chain"
  "codeWrapperMessage\022;\n\022invocation_request"
  "\030\001 \001(\0132\035.invocation.InvocationRequestH\000\022"
  ":\n\022get_state_response\030\002 \001(\0132\034.invocation"
  ".GetStateResponseH\000\022:\n\022put_state_respons"
  "e\030\003 \001(\0132\034.invocation.PutStateResponseH\000B"
  "\017\n\rmessage_oneof\"U\n\021InvocationRequest\022\026\n"
  "\016chaincode_uuid\030\001 \001(\014\022\025\n\rfunction_name\030\002"
  " \001(\t\022\021\n\targuments\030\003 \003(\t\"!\n\020GetStateRespo"
  "nse\022\r\n\005value\030\001 \001(\t\"+\n\020PutStateResponse\022\027"
  "\n\017acknowledgement\030\001 \001(\t\"\322\001\n\025ChaincodePro"
  "xyMessage\022=\n\023invocation_response\030\001 \001(\0132\036"
  ".invocation.InvocationResponseH\000\0228\n\021get_"
  "state_request\030\002 \001(\0132\033.invocation.GetStat"
  "eRequestH\000\0228\n\021put_state_request\030\003 \001(\0132\033."
  "invocation.PutStateRequestH\000B\006\n\004type\"0\n\022"
  "InvocationResponse\022\032\n\022execution_response"
  "\030\001 \001(\014\"\036\n\017GetStateRequest\022\013\n\003key\030\001 \001(\t\"-"
  "\n\017PutStateRequest\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
  "\002 \001(\t2s\n\nInvocation\022e\n\025TransactionInvoca"
  "tion\022#.invocation.ChaincodeWrapperMessag"
  "e\032!.invocation.ChaincodeProxyMessage\"\000(\001"
  "0\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_invocation_2eproto = {
  false, InitDefaults_invocation_2eproto, 
  descriptor_table_protodef_invocation_2eproto,
  "invocation.proto", &assign_descriptors_table_invocation_2eproto, 890,
};

void AddDescriptors_invocation_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_invocation_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_invocation_2eproto = []() { AddDescriptors_invocation_2eproto(); return true; }();
namespace invocation {

// ===================================================================

void ChaincodeWrapperMessage::InitAsDefaultInstance() {
  ::invocation::_ChaincodeWrapperMessage_default_instance_.invocation_request_ = const_cast< ::invocation::InvocationRequest*>(
      ::invocation::InvocationRequest::internal_default_instance());
  ::invocation::_ChaincodeWrapperMessage_default_instance_.get_state_response_ = const_cast< ::invocation::GetStateResponse*>(
      ::invocation::GetStateResponse::internal_default_instance());
  ::invocation::_ChaincodeWrapperMessage_default_instance_.put_state_response_ = const_cast< ::invocation::PutStateResponse*>(
      ::invocation::PutStateResponse::internal_default_instance());
}
class ChaincodeWrapperMessage::HasBitSetters {
 public:
  static const ::invocation::InvocationRequest& invocation_request(const ChaincodeWrapperMessage* msg);
  static const ::invocation::GetStateResponse& get_state_response(const ChaincodeWrapperMessage* msg);
  static const ::invocation::PutStateResponse& put_state_response(const ChaincodeWrapperMessage* msg);
};

const ::invocation::InvocationRequest&
ChaincodeWrapperMessage::HasBitSetters::invocation_request(const ChaincodeWrapperMessage* msg) {
  return *msg->message_oneof_.invocation_request_;
}
const ::invocation::GetStateResponse&
ChaincodeWrapperMessage::HasBitSetters::get_state_response(const ChaincodeWrapperMessage* msg) {
  return *msg->message_oneof_.get_state_response_;
}
const ::invocation::PutStateResponse&
ChaincodeWrapperMessage::HasBitSetters::put_state_response(const ChaincodeWrapperMessage* msg) {
  return *msg->message_oneof_.put_state_response_;
}
void ChaincodeWrapperMessage::set_allocated_invocation_request(::invocation::InvocationRequest* invocation_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message_oneof();
  if (invocation_request) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      invocation_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, invocation_request, submessage_arena);
    }
    set_has_invocation_request();
    message_oneof_.invocation_request_ = invocation_request;
  }
  // @@protoc_insertion_point(field_set_allocated:invocation.ChaincodeWrapperMessage.invocation_request)
}
void ChaincodeWrapperMessage::set_allocated_get_state_response(::invocation::GetStateResponse* get_state_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message_oneof();
  if (get_state_response) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      get_state_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_state_response, submessage_arena);
    }
    set_has_get_state_response();
    message_oneof_.get_state_response_ = get_state_response;
  }
  // @@protoc_insertion_point(field_set_allocated:invocation.ChaincodeWrapperMessage.get_state_response)
}
void ChaincodeWrapperMessage::set_allocated_put_state_response(::invocation::PutStateResponse* put_state_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message_oneof();
  if (put_state_response) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      put_state_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, put_state_response, submessage_arena);
    }
    set_has_put_state_response();
    message_oneof_.put_state_response_ = put_state_response;
  }
  // @@protoc_insertion_point(field_set_allocated:invocation.ChaincodeWrapperMessage.put_state_response)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChaincodeWrapperMessage::kInvocationRequestFieldNumber;
const int ChaincodeWrapperMessage::kGetStateResponseFieldNumber;
const int ChaincodeWrapperMessage::kPutStateResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChaincodeWrapperMessage::ChaincodeWrapperMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invocation.ChaincodeWrapperMessage)
}
ChaincodeWrapperMessage::ChaincodeWrapperMessage(const ChaincodeWrapperMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_message_oneof();
  switch (from.message_oneof_case()) {
    case kInvocationRequest: {
      mutable_invocation_request()->::invocation::InvocationRequest::MergeFrom(from.invocation_request());
      break;
    }
    case kGetStateResponse: {
      mutable_get_state_response()->::invocation::GetStateResponse::MergeFrom(from.get_state_response());
      break;
    }
    case kPutStateResponse: {
      mutable_put_state_response()->::invocation::PutStateResponse::MergeFrom(from.put_state_response());
      break;
    }
    case MESSAGE_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:invocation.ChaincodeWrapperMessage)
}

void ChaincodeWrapperMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ChaincodeWrapperMessage_invocation_2eproto.base);
  clear_has_message_oneof();
}

ChaincodeWrapperMessage::~ChaincodeWrapperMessage() {
  // @@protoc_insertion_point(destructor:invocation.ChaincodeWrapperMessage)
  SharedDtor();
}

void ChaincodeWrapperMessage::SharedDtor() {
  if (has_message_oneof()) {
    clear_message_oneof();
  }
}

void ChaincodeWrapperMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChaincodeWrapperMessage& ChaincodeWrapperMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ChaincodeWrapperMessage_invocation_2eproto.base);
  return *internal_default_instance();
}


void ChaincodeWrapperMessage::clear_message_oneof() {
// @@protoc_insertion_point(one_of_clear_start:invocation.ChaincodeWrapperMessage)
  switch (message_oneof_case()) {
    case kInvocationRequest: {
      delete message_oneof_.invocation_request_;
      break;
    }
    case kGetStateResponse: {
      delete message_oneof_.get_state_response_;
      break;
    }
    case kPutStateResponse: {
      delete message_oneof_.put_state_response_;
      break;
    }
    case MESSAGE_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_ONEOF_NOT_SET;
}


void ChaincodeWrapperMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:invocation.ChaincodeWrapperMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message_oneof();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ChaincodeWrapperMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ChaincodeWrapperMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .invocation.InvocationRequest invocation_request = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::invocation::InvocationRequest::_InternalParse;
        object = msg->mutable_invocation_request();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .invocation.GetStateResponse get_state_response = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::invocation::GetStateResponse::_InternalParse;
        object = msg->mutable_get_state_response();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .invocation.PutStateResponse put_state_response = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::invocation::PutStateResponse::_InternalParse;
        object = msg->mutable_put_state_response();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ChaincodeWrapperMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:invocation.ChaincodeWrapperMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .invocation.InvocationRequest invocation_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_invocation_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .invocation.GetStateResponse get_state_response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_state_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .invocation.PutStateResponse put_state_response = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_state_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:invocation.ChaincodeWrapperMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:invocation.ChaincodeWrapperMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ChaincodeWrapperMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:invocation.ChaincodeWrapperMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .invocation.InvocationRequest invocation_request = 1;
  if (has_invocation_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::invocation_request(this), output);
  }

  // .invocation.GetStateResponse get_state_response = 2;
  if (has_get_state_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::get_state_response(this), output);
  }

  // .invocation.PutStateResponse put_state_response = 3;
  if (has_put_state_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::put_state_response(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:invocation.ChaincodeWrapperMessage)
}

::google::protobuf::uint8* ChaincodeWrapperMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:invocation.ChaincodeWrapperMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .invocation.InvocationRequest invocation_request = 1;
  if (has_invocation_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::invocation_request(this), target);
  }

  // .invocation.GetStateResponse get_state_response = 2;
  if (has_get_state_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::get_state_response(this), target);
  }

  // .invocation.PutStateResponse put_state_response = 3;
  if (has_put_state_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::put_state_response(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invocation.ChaincodeWrapperMessage)
  return target;
}

size_t ChaincodeWrapperMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invocation.ChaincodeWrapperMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_oneof_case()) {
    // .invocation.InvocationRequest invocation_request = 1;
    case kInvocationRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_oneof_.invocation_request_);
      break;
    }
    // .invocation.GetStateResponse get_state_response = 2;
    case kGetStateResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_oneof_.get_state_response_);
      break;
    }
    // .invocation.PutStateResponse put_state_response = 3;
    case kPutStateResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_oneof_.put_state_response_);
      break;
    }
    case MESSAGE_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChaincodeWrapperMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invocation.ChaincodeWrapperMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ChaincodeWrapperMessage* source =
      ::google::protobuf::DynamicCastToGenerated<ChaincodeWrapperMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invocation.ChaincodeWrapperMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invocation.ChaincodeWrapperMessage)
    MergeFrom(*source);
  }
}

void ChaincodeWrapperMessage::MergeFrom(const ChaincodeWrapperMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invocation.ChaincodeWrapperMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_oneof_case()) {
    case kInvocationRequest: {
      mutable_invocation_request()->::invocation::InvocationRequest::MergeFrom(from.invocation_request());
      break;
    }
    case kGetStateResponse: {
      mutable_get_state_response()->::invocation::GetStateResponse::MergeFrom(from.get_state_response());
      break;
    }
    case kPutStateResponse: {
      mutable_put_state_response()->::invocation::PutStateResponse::MergeFrom(from.put_state_response());
      break;
    }
    case MESSAGE_ONEOF_NOT_SET: {
      break;
    }
  }
}

void ChaincodeWrapperMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invocation.ChaincodeWrapperMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChaincodeWrapperMessage::CopyFrom(const ChaincodeWrapperMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invocation.ChaincodeWrapperMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChaincodeWrapperMessage::IsInitialized() const {
  return true;
}

void ChaincodeWrapperMessage::Swap(ChaincodeWrapperMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChaincodeWrapperMessage::InternalSwap(ChaincodeWrapperMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(message_oneof_, other->message_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata ChaincodeWrapperMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_invocation_2eproto);
  return ::file_level_metadata_invocation_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InvocationRequest::InitAsDefaultInstance() {
}
class InvocationRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvocationRequest::kChaincodeUuidFieldNumber;
const int InvocationRequest::kFunctionNameFieldNumber;
const int InvocationRequest::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvocationRequest::InvocationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invocation.InvocationRequest)
}
InvocationRequest::InvocationRequest(const InvocationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      arguments_(from.arguments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chaincode_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chaincode_uuid().size() > 0) {
    chaincode_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaincode_uuid_);
  }
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function_name().size() > 0) {
    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
  // @@protoc_insertion_point(copy_constructor:invocation.InvocationRequest)
}

void InvocationRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InvocationRequest_invocation_2eproto.base);
  chaincode_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InvocationRequest::~InvocationRequest() {
  // @@protoc_insertion_point(destructor:invocation.InvocationRequest)
  SharedDtor();
}

void InvocationRequest::SharedDtor() {
  chaincode_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InvocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InvocationRequest& InvocationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InvocationRequest_invocation_2eproto.base);
  return *internal_default_instance();
}


void InvocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:invocation.InvocationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  chaincode_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InvocationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InvocationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes chaincode_uuid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_chaincode_uuid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string function_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("invocation.InvocationRequest.function_name");
        object = msg->mutable_function_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string arguments = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("invocation.InvocationRequest.arguments");
          object = msg->add_arguments();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InvocationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:invocation.InvocationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes chaincode_uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_chaincode_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string function_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function_name().data(), static_cast<int>(this->function_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "invocation.InvocationRequest.function_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string arguments = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_arguments()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->arguments(this->arguments_size() - 1).data(),
            static_cast<int>(this->arguments(this->arguments_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "invocation.InvocationRequest.arguments"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:invocation.InvocationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:invocation.InvocationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InvocationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:invocation.InvocationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes chaincode_uuid = 1;
  if (this->chaincode_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->chaincode_uuid(), output);
  }

  // string function_name = 2;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.InvocationRequest.function_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->function_name(), output);
  }

  // repeated string arguments = 3;
  for (int i = 0, n = this->arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arguments(i).data(), static_cast<int>(this->arguments(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.InvocationRequest.arguments");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->arguments(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:invocation.InvocationRequest)
}

::google::protobuf::uint8* InvocationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:invocation.InvocationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes chaincode_uuid = 1;
  if (this->chaincode_uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->chaincode_uuid(), target);
  }

  // string function_name = 2;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.InvocationRequest.function_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->function_name(), target);
  }

  // repeated string arguments = 3;
  for (int i = 0, n = this->arguments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arguments(i).data(), static_cast<int>(this->arguments(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.InvocationRequest.arguments");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->arguments(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invocation.InvocationRequest)
  return target;
}

size_t InvocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invocation.InvocationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string arguments = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->arguments_size());
  for (int i = 0, n = this->arguments_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->arguments(i));
  }

  // bytes chaincode_uuid = 1;
  if (this->chaincode_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->chaincode_uuid());
  }

  // string function_name = 2;
  if (this->function_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvocationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invocation.InvocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InvocationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<InvocationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invocation.InvocationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invocation.InvocationRequest)
    MergeFrom(*source);
  }
}

void InvocationRequest::MergeFrom(const InvocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invocation.InvocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  if (from.chaincode_uuid().size() > 0) {

    chaincode_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaincode_uuid_);
  }
  if (from.function_name().size() > 0) {

    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
}

void InvocationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invocation.InvocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvocationRequest::CopyFrom(const InvocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invocation.InvocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvocationRequest::IsInitialized() const {
  return true;
}

void InvocationRequest::Swap(InvocationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvocationRequest::InternalSwap(InvocationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  arguments_.InternalSwap(CastToBase(&other->arguments_));
  chaincode_uuid_.Swap(&other->chaincode_uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  function_name_.Swap(&other->function_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata InvocationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_invocation_2eproto);
  return ::file_level_metadata_invocation_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetStateResponse::InitAsDefaultInstance() {
}
class GetStateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStateResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStateResponse::GetStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invocation.GetStateResponse)
}
GetStateResponse::GetStateResponse(const GetStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:invocation.GetStateResponse)
}

void GetStateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetStateResponse_invocation_2eproto.base);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetStateResponse::~GetStateResponse() {
  // @@protoc_insertion_point(destructor:invocation.GetStateResponse)
  SharedDtor();
}

void GetStateResponse::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStateResponse& GetStateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetStateResponse_invocation_2eproto.base);
  return *internal_default_instance();
}


void GetStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:invocation.GetStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetStateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetStateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("invocation.GetStateResponse.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:invocation.GetStateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "invocation.GetStateResponse.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:invocation.GetStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:invocation.GetStateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:invocation.GetStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.GetStateResponse.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:invocation.GetStateResponse)
}

::google::protobuf::uint8* GetStateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:invocation.GetStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.GetStateResponse.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invocation.GetStateResponse)
  return target;
}

size_t GetStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invocation.GetStateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invocation.GetStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetStateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invocation.GetStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invocation.GetStateResponse)
    MergeFrom(*source);
  }
}

void GetStateResponse::MergeFrom(const GetStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invocation.GetStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void GetStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invocation.GetStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStateResponse::CopyFrom(const GetStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invocation.GetStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStateResponse::IsInitialized() const {
  return true;
}

void GetStateResponse::Swap(GetStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStateResponse::InternalSwap(GetStateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetStateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_invocation_2eproto);
  return ::file_level_metadata_invocation_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PutStateResponse::InitAsDefaultInstance() {
}
class PutStateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutStateResponse::kAcknowledgementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutStateResponse::PutStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invocation.PutStateResponse)
}
PutStateResponse::PutStateResponse(const PutStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  acknowledgement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.acknowledgement().size() > 0) {
    acknowledgement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acknowledgement_);
  }
  // @@protoc_insertion_point(copy_constructor:invocation.PutStateResponse)
}

void PutStateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PutStateResponse_invocation_2eproto.base);
  acknowledgement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PutStateResponse::~PutStateResponse() {
  // @@protoc_insertion_point(destructor:invocation.PutStateResponse)
  SharedDtor();
}

void PutStateResponse::SharedDtor() {
  acknowledgement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PutStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PutStateResponse& PutStateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PutStateResponse_invocation_2eproto.base);
  return *internal_default_instance();
}


void PutStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:invocation.PutStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acknowledgement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PutStateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PutStateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string acknowledgement = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("invocation.PutStateResponse.acknowledgement");
        object = msg->mutable_acknowledgement();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PutStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:invocation.PutStateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string acknowledgement = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acknowledgement()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->acknowledgement().data(), static_cast<int>(this->acknowledgement().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "invocation.PutStateResponse.acknowledgement"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:invocation.PutStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:invocation.PutStateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PutStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:invocation.PutStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string acknowledgement = 1;
  if (this->acknowledgement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->acknowledgement().data(), static_cast<int>(this->acknowledgement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.PutStateResponse.acknowledgement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->acknowledgement(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:invocation.PutStateResponse)
}

::google::protobuf::uint8* PutStateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:invocation.PutStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string acknowledgement = 1;
  if (this->acknowledgement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->acknowledgement().data(), static_cast<int>(this->acknowledgement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.PutStateResponse.acknowledgement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->acknowledgement(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invocation.PutStateResponse)
  return target;
}

size_t PutStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invocation.PutStateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string acknowledgement = 1;
  if (this->acknowledgement().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->acknowledgement());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PutStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invocation.PutStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PutStateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<PutStateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invocation.PutStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invocation.PutStateResponse)
    MergeFrom(*source);
  }
}

void PutStateResponse::MergeFrom(const PutStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invocation.PutStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.acknowledgement().size() > 0) {

    acknowledgement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acknowledgement_);
  }
}

void PutStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invocation.PutStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutStateResponse::CopyFrom(const PutStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invocation.PutStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutStateResponse::IsInitialized() const {
  return true;
}

void PutStateResponse::Swap(PutStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutStateResponse::InternalSwap(PutStateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  acknowledgement_.Swap(&other->acknowledgement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata PutStateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_invocation_2eproto);
  return ::file_level_metadata_invocation_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ChaincodeProxyMessage::InitAsDefaultInstance() {
  ::invocation::_ChaincodeProxyMessage_default_instance_.invocation_response_ = const_cast< ::invocation::InvocationResponse*>(
      ::invocation::InvocationResponse::internal_default_instance());
  ::invocation::_ChaincodeProxyMessage_default_instance_.get_state_request_ = const_cast< ::invocation::GetStateRequest*>(
      ::invocation::GetStateRequest::internal_default_instance());
  ::invocation::_ChaincodeProxyMessage_default_instance_.put_state_request_ = const_cast< ::invocation::PutStateRequest*>(
      ::invocation::PutStateRequest::internal_default_instance());
}
class ChaincodeProxyMessage::HasBitSetters {
 public:
  static const ::invocation::InvocationResponse& invocation_response(const ChaincodeProxyMessage* msg);
  static const ::invocation::GetStateRequest& get_state_request(const ChaincodeProxyMessage* msg);
  static const ::invocation::PutStateRequest& put_state_request(const ChaincodeProxyMessage* msg);
};

const ::invocation::InvocationResponse&
ChaincodeProxyMessage::HasBitSetters::invocation_response(const ChaincodeProxyMessage* msg) {
  return *msg->type_.invocation_response_;
}
const ::invocation::GetStateRequest&
ChaincodeProxyMessage::HasBitSetters::get_state_request(const ChaincodeProxyMessage* msg) {
  return *msg->type_.get_state_request_;
}
const ::invocation::PutStateRequest&
ChaincodeProxyMessage::HasBitSetters::put_state_request(const ChaincodeProxyMessage* msg) {
  return *msg->type_.put_state_request_;
}
void ChaincodeProxyMessage::set_allocated_invocation_response(::invocation::InvocationResponse* invocation_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (invocation_response) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      invocation_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, invocation_response, submessage_arena);
    }
    set_has_invocation_response();
    type_.invocation_response_ = invocation_response;
  }
  // @@protoc_insertion_point(field_set_allocated:invocation.ChaincodeProxyMessage.invocation_response)
}
void ChaincodeProxyMessage::set_allocated_get_state_request(::invocation::GetStateRequest* get_state_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (get_state_request) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      get_state_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_state_request, submessage_arena);
    }
    set_has_get_state_request();
    type_.get_state_request_ = get_state_request;
  }
  // @@protoc_insertion_point(field_set_allocated:invocation.ChaincodeProxyMessage.get_state_request)
}
void ChaincodeProxyMessage::set_allocated_put_state_request(::invocation::PutStateRequest* put_state_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (put_state_request) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      put_state_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, put_state_request, submessage_arena);
    }
    set_has_put_state_request();
    type_.put_state_request_ = put_state_request;
  }
  // @@protoc_insertion_point(field_set_allocated:invocation.ChaincodeProxyMessage.put_state_request)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChaincodeProxyMessage::kInvocationResponseFieldNumber;
const int ChaincodeProxyMessage::kGetStateRequestFieldNumber;
const int ChaincodeProxyMessage::kPutStateRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChaincodeProxyMessage::ChaincodeProxyMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invocation.ChaincodeProxyMessage)
}
ChaincodeProxyMessage::ChaincodeProxyMessage(const ChaincodeProxyMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kInvocationResponse: {
      mutable_invocation_response()->::invocation::InvocationResponse::MergeFrom(from.invocation_response());
      break;
    }
    case kGetStateRequest: {
      mutable_get_state_request()->::invocation::GetStateRequest::MergeFrom(from.get_state_request());
      break;
    }
    case kPutStateRequest: {
      mutable_put_state_request()->::invocation::PutStateRequest::MergeFrom(from.put_state_request());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:invocation.ChaincodeProxyMessage)
}

void ChaincodeProxyMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ChaincodeProxyMessage_invocation_2eproto.base);
  clear_has_type();
}

ChaincodeProxyMessage::~ChaincodeProxyMessage() {
  // @@protoc_insertion_point(destructor:invocation.ChaincodeProxyMessage)
  SharedDtor();
}

void ChaincodeProxyMessage::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void ChaincodeProxyMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChaincodeProxyMessage& ChaincodeProxyMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ChaincodeProxyMessage_invocation_2eproto.base);
  return *internal_default_instance();
}


void ChaincodeProxyMessage::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:invocation.ChaincodeProxyMessage)
  switch (type_case()) {
    case kInvocationResponse: {
      delete type_.invocation_response_;
      break;
    }
    case kGetStateRequest: {
      delete type_.get_state_request_;
      break;
    }
    case kPutStateRequest: {
      delete type_.put_state_request_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void ChaincodeProxyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:invocation.ChaincodeProxyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ChaincodeProxyMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ChaincodeProxyMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .invocation.InvocationResponse invocation_response = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::invocation::InvocationResponse::_InternalParse;
        object = msg->mutable_invocation_response();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .invocation.GetStateRequest get_state_request = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::invocation::GetStateRequest::_InternalParse;
        object = msg->mutable_get_state_request();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .invocation.PutStateRequest put_state_request = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::invocation::PutStateRequest::_InternalParse;
        object = msg->mutable_put_state_request();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ChaincodeProxyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:invocation.ChaincodeProxyMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .invocation.InvocationResponse invocation_response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_invocation_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .invocation.GetStateRequest get_state_request = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_state_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .invocation.PutStateRequest put_state_request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_state_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:invocation.ChaincodeProxyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:invocation.ChaincodeProxyMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ChaincodeProxyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:invocation.ChaincodeProxyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .invocation.InvocationResponse invocation_response = 1;
  if (has_invocation_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::invocation_response(this), output);
  }

  // .invocation.GetStateRequest get_state_request = 2;
  if (has_get_state_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::get_state_request(this), output);
  }

  // .invocation.PutStateRequest put_state_request = 3;
  if (has_put_state_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::put_state_request(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:invocation.ChaincodeProxyMessage)
}

::google::protobuf::uint8* ChaincodeProxyMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:invocation.ChaincodeProxyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .invocation.InvocationResponse invocation_response = 1;
  if (has_invocation_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::invocation_response(this), target);
  }

  // .invocation.GetStateRequest get_state_request = 2;
  if (has_get_state_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::get_state_request(this), target);
  }

  // .invocation.PutStateRequest put_state_request = 3;
  if (has_put_state_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::put_state_request(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invocation.ChaincodeProxyMessage)
  return target;
}

size_t ChaincodeProxyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invocation.ChaincodeProxyMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // .invocation.InvocationResponse invocation_response = 1;
    case kInvocationResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.invocation_response_);
      break;
    }
    // .invocation.GetStateRequest get_state_request = 2;
    case kGetStateRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.get_state_request_);
      break;
    }
    // .invocation.PutStateRequest put_state_request = 3;
    case kPutStateRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.put_state_request_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChaincodeProxyMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invocation.ChaincodeProxyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ChaincodeProxyMessage* source =
      ::google::protobuf::DynamicCastToGenerated<ChaincodeProxyMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invocation.ChaincodeProxyMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invocation.ChaincodeProxyMessage)
    MergeFrom(*source);
  }
}

void ChaincodeProxyMessage::MergeFrom(const ChaincodeProxyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invocation.ChaincodeProxyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kInvocationResponse: {
      mutable_invocation_response()->::invocation::InvocationResponse::MergeFrom(from.invocation_response());
      break;
    }
    case kGetStateRequest: {
      mutable_get_state_request()->::invocation::GetStateRequest::MergeFrom(from.get_state_request());
      break;
    }
    case kPutStateRequest: {
      mutable_put_state_request()->::invocation::PutStateRequest::MergeFrom(from.put_state_request());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void ChaincodeProxyMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invocation.ChaincodeProxyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChaincodeProxyMessage::CopyFrom(const ChaincodeProxyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invocation.ChaincodeProxyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChaincodeProxyMessage::IsInitialized() const {
  return true;
}

void ChaincodeProxyMessage::Swap(ChaincodeProxyMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChaincodeProxyMessage::InternalSwap(ChaincodeProxyMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata ChaincodeProxyMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_invocation_2eproto);
  return ::file_level_metadata_invocation_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InvocationResponse::InitAsDefaultInstance() {
}
class InvocationResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvocationResponse::kExecutionResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvocationResponse::InvocationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invocation.InvocationResponse)
}
InvocationResponse::InvocationResponse(const InvocationResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  execution_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.execution_response().size() > 0) {
    execution_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execution_response_);
  }
  // @@protoc_insertion_point(copy_constructor:invocation.InvocationResponse)
}

void InvocationResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InvocationResponse_invocation_2eproto.base);
  execution_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InvocationResponse::~InvocationResponse() {
  // @@protoc_insertion_point(destructor:invocation.InvocationResponse)
  SharedDtor();
}

void InvocationResponse::SharedDtor() {
  execution_response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InvocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InvocationResponse& InvocationResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InvocationResponse_invocation_2eproto.base);
  return *internal_default_instance();
}


void InvocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:invocation.InvocationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  execution_response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InvocationResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InvocationResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes execution_response = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_execution_response();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InvocationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:invocation.InvocationResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes execution_response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_execution_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:invocation.InvocationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:invocation.InvocationResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InvocationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:invocation.InvocationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes execution_response = 1;
  if (this->execution_response().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->execution_response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:invocation.InvocationResponse)
}

::google::protobuf::uint8* InvocationResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:invocation.InvocationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes execution_response = 1;
  if (this->execution_response().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->execution_response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invocation.InvocationResponse)
  return target;
}

size_t InvocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invocation.InvocationResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes execution_response = 1;
  if (this->execution_response().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->execution_response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InvocationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invocation.InvocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InvocationResponse* source =
      ::google::protobuf::DynamicCastToGenerated<InvocationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invocation.InvocationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invocation.InvocationResponse)
    MergeFrom(*source);
  }
}

void InvocationResponse::MergeFrom(const InvocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invocation.InvocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.execution_response().size() > 0) {

    execution_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.execution_response_);
  }
}

void InvocationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invocation.InvocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvocationResponse::CopyFrom(const InvocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invocation.InvocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvocationResponse::IsInitialized() const {
  return true;
}

void InvocationResponse::Swap(InvocationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvocationResponse::InternalSwap(InvocationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  execution_response_.Swap(&other->execution_response_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata InvocationResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_invocation_2eproto);
  return ::file_level_metadata_invocation_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetStateRequest::InitAsDefaultInstance() {
}
class GetStateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStateRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStateRequest::GetStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invocation.GetStateRequest)
}
GetStateRequest::GetStateRequest(const GetStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:invocation.GetStateRequest)
}

void GetStateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetStateRequest_invocation_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetStateRequest::~GetStateRequest() {
  // @@protoc_insertion_point(destructor:invocation.GetStateRequest)
  SharedDtor();
}

void GetStateRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStateRequest& GetStateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetStateRequest_invocation_2eproto.base);
  return *internal_default_instance();
}


void GetStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:invocation.GetStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetStateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetStateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("invocation.GetStateRequest.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:invocation.GetStateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "invocation.GetStateRequest.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:invocation.GetStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:invocation.GetStateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:invocation.GetStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.GetStateRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:invocation.GetStateRequest)
}

::google::protobuf::uint8* GetStateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:invocation.GetStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.GetStateRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invocation.GetStateRequest)
  return target;
}

size_t GetStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invocation.GetStateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invocation.GetStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invocation.GetStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invocation.GetStateRequest)
    MergeFrom(*source);
  }
}

void GetStateRequest::MergeFrom(const GetStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invocation.GetStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void GetStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invocation.GetStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStateRequest::CopyFrom(const GetStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invocation.GetStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStateRequest::IsInitialized() const {
  return true;
}

void GetStateRequest::Swap(GetStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStateRequest::InternalSwap(GetStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata GetStateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_invocation_2eproto);
  return ::file_level_metadata_invocation_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PutStateRequest::InitAsDefaultInstance() {
}
class PutStateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutStateRequest::kKeyFieldNumber;
const int PutStateRequest::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutStateRequest::PutStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:invocation.PutStateRequest)
}
PutStateRequest::PutStateRequest(const PutStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:invocation.PutStateRequest)
}

void PutStateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PutStateRequest_invocation_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PutStateRequest::~PutStateRequest() {
  // @@protoc_insertion_point(destructor:invocation.PutStateRequest)
  SharedDtor();
}

void PutStateRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PutStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PutStateRequest& PutStateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PutStateRequest_invocation_2eproto.base);
  return *internal_default_instance();
}


void PutStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:invocation.PutStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PutStateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PutStateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("invocation.PutStateRequest.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("invocation.PutStateRequest.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PutStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:invocation.PutStateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "invocation.PutStateRequest.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "invocation.PutStateRequest.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:invocation.PutStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:invocation.PutStateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PutStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:invocation.PutStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.PutStateRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.PutStateRequest.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:invocation.PutStateRequest)
}

::google::protobuf::uint8* PutStateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:invocation.PutStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.PutStateRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "invocation.PutStateRequest.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:invocation.PutStateRequest)
  return target;
}

size_t PutStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:invocation.PutStateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PutStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:invocation.PutStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PutStateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<PutStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:invocation.PutStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:invocation.PutStateRequest)
    MergeFrom(*source);
  }
}

void PutStateRequest::MergeFrom(const PutStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:invocation.PutStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void PutStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:invocation.PutStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutStateRequest::CopyFrom(const PutStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:invocation.PutStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutStateRequest::IsInitialized() const {
  return true;
}

void PutStateRequest::Swap(PutStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutStateRequest::InternalSwap(PutStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata PutStateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_invocation_2eproto);
  return ::file_level_metadata_invocation_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace invocation
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::invocation::ChaincodeWrapperMessage* Arena::CreateMaybeMessage< ::invocation::ChaincodeWrapperMessage >(Arena* arena) {
  return Arena::CreateInternal< ::invocation::ChaincodeWrapperMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::invocation::InvocationRequest* Arena::CreateMaybeMessage< ::invocation::InvocationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::invocation::InvocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::invocation::GetStateResponse* Arena::CreateMaybeMessage< ::invocation::GetStateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::invocation::GetStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::invocation::PutStateResponse* Arena::CreateMaybeMessage< ::invocation::PutStateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::invocation::PutStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::invocation::ChaincodeProxyMessage* Arena::CreateMaybeMessage< ::invocation::ChaincodeProxyMessage >(Arena* arena) {
  return Arena::CreateInternal< ::invocation::ChaincodeProxyMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::invocation::InvocationResponse* Arena::CreateMaybeMessage< ::invocation::InvocationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::invocation::InvocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::invocation::GetStateRequest* Arena::CreateMaybeMessage< ::invocation::GetStateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::invocation::GetStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::invocation::PutStateRequest* Arena::CreateMaybeMessage< ::invocation::PutStateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::invocation::PutStateRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
