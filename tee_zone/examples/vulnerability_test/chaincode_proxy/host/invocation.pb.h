// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: invocation.proto

#ifndef PROTOBUF_INCLUDED_invocation_2eproto
#define PROTOBUF_INCLUDED_invocation_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_invocation_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_invocation_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_invocation_2eproto();
namespace invocation {
class ChaincodeProxyMessage;
class ChaincodeProxyMessageDefaultTypeInternal;
extern ChaincodeProxyMessageDefaultTypeInternal _ChaincodeProxyMessage_default_instance_;
class ChaincodeWrapperMessage;
class ChaincodeWrapperMessageDefaultTypeInternal;
extern ChaincodeWrapperMessageDefaultTypeInternal _ChaincodeWrapperMessage_default_instance_;
class GetStateRequest;
class GetStateRequestDefaultTypeInternal;
extern GetStateRequestDefaultTypeInternal _GetStateRequest_default_instance_;
class GetStateResponse;
class GetStateResponseDefaultTypeInternal;
extern GetStateResponseDefaultTypeInternal _GetStateResponse_default_instance_;
class InvocationRequest;
class InvocationRequestDefaultTypeInternal;
extern InvocationRequestDefaultTypeInternal _InvocationRequest_default_instance_;
class InvocationResponse;
class InvocationResponseDefaultTypeInternal;
extern InvocationResponseDefaultTypeInternal _InvocationResponse_default_instance_;
class PutStateRequest;
class PutStateRequestDefaultTypeInternal;
extern PutStateRequestDefaultTypeInternal _PutStateRequest_default_instance_;
class PutStateResponse;
class PutStateResponseDefaultTypeInternal;
extern PutStateResponseDefaultTypeInternal _PutStateResponse_default_instance_;
}  // namespace invocation
namespace google {
namespace protobuf {
template<> ::invocation::ChaincodeProxyMessage* Arena::CreateMaybeMessage<::invocation::ChaincodeProxyMessage>(Arena*);
template<> ::invocation::ChaincodeWrapperMessage* Arena::CreateMaybeMessage<::invocation::ChaincodeWrapperMessage>(Arena*);
template<> ::invocation::GetStateRequest* Arena::CreateMaybeMessage<::invocation::GetStateRequest>(Arena*);
template<> ::invocation::GetStateResponse* Arena::CreateMaybeMessage<::invocation::GetStateResponse>(Arena*);
template<> ::invocation::InvocationRequest* Arena::CreateMaybeMessage<::invocation::InvocationRequest>(Arena*);
template<> ::invocation::InvocationResponse* Arena::CreateMaybeMessage<::invocation::InvocationResponse>(Arena*);
template<> ::invocation::PutStateRequest* Arena::CreateMaybeMessage<::invocation::PutStateRequest>(Arena*);
template<> ::invocation::PutStateResponse* Arena::CreateMaybeMessage<::invocation::PutStateResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace invocation {

// ===================================================================

class ChaincodeWrapperMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:invocation.ChaincodeWrapperMessage) */ {
 public:
  ChaincodeWrapperMessage();
  virtual ~ChaincodeWrapperMessage();

  ChaincodeWrapperMessage(const ChaincodeWrapperMessage& from);

  inline ChaincodeWrapperMessage& operator=(const ChaincodeWrapperMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChaincodeWrapperMessage(ChaincodeWrapperMessage&& from) noexcept
    : ChaincodeWrapperMessage() {
    *this = ::std::move(from);
  }

  inline ChaincodeWrapperMessage& operator=(ChaincodeWrapperMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ChaincodeWrapperMessage& default_instance();

  enum MessageOneofCase {
    kInvocationRequest = 1,
    kGetStateResponse = 2,
    kPutStateResponse = 3,
    MESSAGE_ONEOF_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChaincodeWrapperMessage* internal_default_instance() {
    return reinterpret_cast<const ChaincodeWrapperMessage*>(
               &_ChaincodeWrapperMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ChaincodeWrapperMessage* other);
  friend void swap(ChaincodeWrapperMessage& a, ChaincodeWrapperMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChaincodeWrapperMessage* New() const final {
    return CreateMaybeMessage<ChaincodeWrapperMessage>(nullptr);
  }

  ChaincodeWrapperMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChaincodeWrapperMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChaincodeWrapperMessage& from);
  void MergeFrom(const ChaincodeWrapperMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChaincodeWrapperMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .invocation.InvocationRequest invocation_request = 1;
  bool has_invocation_request() const;
  void clear_invocation_request();
  static const int kInvocationRequestFieldNumber = 1;
  const ::invocation::InvocationRequest& invocation_request() const;
  ::invocation::InvocationRequest* release_invocation_request();
  ::invocation::InvocationRequest* mutable_invocation_request();
  void set_allocated_invocation_request(::invocation::InvocationRequest* invocation_request);

  // .invocation.GetStateResponse get_state_response = 2;
  bool has_get_state_response() const;
  void clear_get_state_response();
  static const int kGetStateResponseFieldNumber = 2;
  const ::invocation::GetStateResponse& get_state_response() const;
  ::invocation::GetStateResponse* release_get_state_response();
  ::invocation::GetStateResponse* mutable_get_state_response();
  void set_allocated_get_state_response(::invocation::GetStateResponse* get_state_response);

  // .invocation.PutStateResponse put_state_response = 3;
  bool has_put_state_response() const;
  void clear_put_state_response();
  static const int kPutStateResponseFieldNumber = 3;
  const ::invocation::PutStateResponse& put_state_response() const;
  ::invocation::PutStateResponse* release_put_state_response();
  ::invocation::PutStateResponse* mutable_put_state_response();
  void set_allocated_put_state_response(::invocation::PutStateResponse* put_state_response);

  void clear_message_oneof();
  MessageOneofCase message_oneof_case() const;
  // @@protoc_insertion_point(class_scope:invocation.ChaincodeWrapperMessage)
 private:
  class HasBitSetters;
  void set_has_invocation_request();
  void set_has_get_state_response();
  void set_has_put_state_response();

  inline bool has_message_oneof() const;
  inline void clear_has_message_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union MessageOneofUnion {
    MessageOneofUnion() {}
    ::invocation::InvocationRequest* invocation_request_;
    ::invocation::GetStateResponse* get_state_response_;
    ::invocation::PutStateResponse* put_state_response_;
  } message_oneof_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_invocation_2eproto;
};
// -------------------------------------------------------------------

class InvocationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:invocation.InvocationRequest) */ {
 public:
  InvocationRequest();
  virtual ~InvocationRequest();

  InvocationRequest(const InvocationRequest& from);

  inline InvocationRequest& operator=(const InvocationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvocationRequest(InvocationRequest&& from) noexcept
    : InvocationRequest() {
    *this = ::std::move(from);
  }

  inline InvocationRequest& operator=(InvocationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InvocationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvocationRequest* internal_default_instance() {
    return reinterpret_cast<const InvocationRequest*>(
               &_InvocationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(InvocationRequest* other);
  friend void swap(InvocationRequest& a, InvocationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvocationRequest* New() const final {
    return CreateMaybeMessage<InvocationRequest>(nullptr);
  }

  InvocationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvocationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvocationRequest& from);
  void MergeFrom(const InvocationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvocationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string arguments = 3;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 3;
  const ::std::string& arguments(int index) const;
  ::std::string* mutable_arguments(int index);
  void set_arguments(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_arguments(int index, ::std::string&& value);
  #endif
  void set_arguments(int index, const char* value);
  void set_arguments(int index, const char* value, size_t size);
  ::std::string* add_arguments();
  void add_arguments(const ::std::string& value);
  #if LANG_CXX11
  void add_arguments(::std::string&& value);
  #endif
  void add_arguments(const char* value);
  void add_arguments(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& arguments() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_arguments();

  // bytes chaincode_uuid = 1;
  void clear_chaincode_uuid();
  static const int kChaincodeUuidFieldNumber = 1;
  const ::std::string& chaincode_uuid() const;
  void set_chaincode_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_chaincode_uuid(::std::string&& value);
  #endif
  void set_chaincode_uuid(const char* value);
  void set_chaincode_uuid(const void* value, size_t size);
  ::std::string* mutable_chaincode_uuid();
  ::std::string* release_chaincode_uuid();
  void set_allocated_chaincode_uuid(::std::string* chaincode_uuid);

  // string function_name = 2;
  void clear_function_name();
  static const int kFunctionNameFieldNumber = 2;
  const ::std::string& function_name() const;
  void set_function_name(const ::std::string& value);
  #if LANG_CXX11
  void set_function_name(::std::string&& value);
  #endif
  void set_function_name(const char* value);
  void set_function_name(const char* value, size_t size);
  ::std::string* mutable_function_name();
  ::std::string* release_function_name();
  void set_allocated_function_name(::std::string* function_name);

  // @@protoc_insertion_point(class_scope:invocation.InvocationRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> arguments_;
  ::google::protobuf::internal::ArenaStringPtr chaincode_uuid_;
  ::google::protobuf::internal::ArenaStringPtr function_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_invocation_2eproto;
};
// -------------------------------------------------------------------

class GetStateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:invocation.GetStateResponse) */ {
 public:
  GetStateResponse();
  virtual ~GetStateResponse();

  GetStateResponse(const GetStateResponse& from);

  inline GetStateResponse& operator=(const GetStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetStateResponse(GetStateResponse&& from) noexcept
    : GetStateResponse() {
    *this = ::std::move(from);
  }

  inline GetStateResponse& operator=(GetStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetStateResponse* internal_default_instance() {
    return reinterpret_cast<const GetStateResponse*>(
               &_GetStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetStateResponse* other);
  friend void swap(GetStateResponse& a, GetStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetStateResponse* New() const final {
    return CreateMaybeMessage<GetStateResponse>(nullptr);
  }

  GetStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetStateResponse& from);
  void MergeFrom(const GetStateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:invocation.GetStateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_invocation_2eproto;
};
// -------------------------------------------------------------------

class PutStateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:invocation.PutStateResponse) */ {
 public:
  PutStateResponse();
  virtual ~PutStateResponse();

  PutStateResponse(const PutStateResponse& from);

  inline PutStateResponse& operator=(const PutStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutStateResponse(PutStateResponse&& from) noexcept
    : PutStateResponse() {
    *this = ::std::move(from);
  }

  inline PutStateResponse& operator=(PutStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PutStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutStateResponse* internal_default_instance() {
    return reinterpret_cast<const PutStateResponse*>(
               &_PutStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PutStateResponse* other);
  friend void swap(PutStateResponse& a, PutStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutStateResponse* New() const final {
    return CreateMaybeMessage<PutStateResponse>(nullptr);
  }

  PutStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PutStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PutStateResponse& from);
  void MergeFrom(const PutStateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string acknowledgement = 1;
  void clear_acknowledgement();
  static const int kAcknowledgementFieldNumber = 1;
  const ::std::string& acknowledgement() const;
  void set_acknowledgement(const ::std::string& value);
  #if LANG_CXX11
  void set_acknowledgement(::std::string&& value);
  #endif
  void set_acknowledgement(const char* value);
  void set_acknowledgement(const char* value, size_t size);
  ::std::string* mutable_acknowledgement();
  ::std::string* release_acknowledgement();
  void set_allocated_acknowledgement(::std::string* acknowledgement);

  // @@protoc_insertion_point(class_scope:invocation.PutStateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr acknowledgement_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_invocation_2eproto;
};
// -------------------------------------------------------------------

class ChaincodeProxyMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:invocation.ChaincodeProxyMessage) */ {
 public:
  ChaincodeProxyMessage();
  virtual ~ChaincodeProxyMessage();

  ChaincodeProxyMessage(const ChaincodeProxyMessage& from);

  inline ChaincodeProxyMessage& operator=(const ChaincodeProxyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChaincodeProxyMessage(ChaincodeProxyMessage&& from) noexcept
    : ChaincodeProxyMessage() {
    *this = ::std::move(from);
  }

  inline ChaincodeProxyMessage& operator=(ChaincodeProxyMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ChaincodeProxyMessage& default_instance();

  enum TypeCase {
    kInvocationResponse = 1,
    kGetStateRequest = 2,
    kPutStateRequest = 3,
    TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChaincodeProxyMessage* internal_default_instance() {
    return reinterpret_cast<const ChaincodeProxyMessage*>(
               &_ChaincodeProxyMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ChaincodeProxyMessage* other);
  friend void swap(ChaincodeProxyMessage& a, ChaincodeProxyMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChaincodeProxyMessage* New() const final {
    return CreateMaybeMessage<ChaincodeProxyMessage>(nullptr);
  }

  ChaincodeProxyMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChaincodeProxyMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChaincodeProxyMessage& from);
  void MergeFrom(const ChaincodeProxyMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChaincodeProxyMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .invocation.InvocationResponse invocation_response = 1;
  bool has_invocation_response() const;
  void clear_invocation_response();
  static const int kInvocationResponseFieldNumber = 1;
  const ::invocation::InvocationResponse& invocation_response() const;
  ::invocation::InvocationResponse* release_invocation_response();
  ::invocation::InvocationResponse* mutable_invocation_response();
  void set_allocated_invocation_response(::invocation::InvocationResponse* invocation_response);

  // .invocation.GetStateRequest get_state_request = 2;
  bool has_get_state_request() const;
  void clear_get_state_request();
  static const int kGetStateRequestFieldNumber = 2;
  const ::invocation::GetStateRequest& get_state_request() const;
  ::invocation::GetStateRequest* release_get_state_request();
  ::invocation::GetStateRequest* mutable_get_state_request();
  void set_allocated_get_state_request(::invocation::GetStateRequest* get_state_request);

  // .invocation.PutStateRequest put_state_request = 3;
  bool has_put_state_request() const;
  void clear_put_state_request();
  static const int kPutStateRequestFieldNumber = 3;
  const ::invocation::PutStateRequest& put_state_request() const;
  ::invocation::PutStateRequest* release_put_state_request();
  ::invocation::PutStateRequest* mutable_put_state_request();
  void set_allocated_put_state_request(::invocation::PutStateRequest* put_state_request);

  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:invocation.ChaincodeProxyMessage)
 private:
  class HasBitSetters;
  void set_has_invocation_response();
  void set_has_get_state_request();
  void set_has_put_state_request();

  inline bool has_type() const;
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union TypeUnion {
    TypeUnion() {}
    ::invocation::InvocationResponse* invocation_response_;
    ::invocation::GetStateRequest* get_state_request_;
    ::invocation::PutStateRequest* put_state_request_;
  } type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_invocation_2eproto;
};
// -------------------------------------------------------------------

class InvocationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:invocation.InvocationResponse) */ {
 public:
  InvocationResponse();
  virtual ~InvocationResponse();

  InvocationResponse(const InvocationResponse& from);

  inline InvocationResponse& operator=(const InvocationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvocationResponse(InvocationResponse&& from) noexcept
    : InvocationResponse() {
    *this = ::std::move(from);
  }

  inline InvocationResponse& operator=(InvocationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InvocationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvocationResponse* internal_default_instance() {
    return reinterpret_cast<const InvocationResponse*>(
               &_InvocationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(InvocationResponse* other);
  friend void swap(InvocationResponse& a, InvocationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvocationResponse* New() const final {
    return CreateMaybeMessage<InvocationResponse>(nullptr);
  }

  InvocationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvocationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvocationResponse& from);
  void MergeFrom(const InvocationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvocationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes execution_response = 1;
  void clear_execution_response();
  static const int kExecutionResponseFieldNumber = 1;
  const ::std::string& execution_response() const;
  void set_execution_response(const ::std::string& value);
  #if LANG_CXX11
  void set_execution_response(::std::string&& value);
  #endif
  void set_execution_response(const char* value);
  void set_execution_response(const void* value, size_t size);
  ::std::string* mutable_execution_response();
  ::std::string* release_execution_response();
  void set_allocated_execution_response(::std::string* execution_response);

  // @@protoc_insertion_point(class_scope:invocation.InvocationResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr execution_response_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_invocation_2eproto;
};
// -------------------------------------------------------------------

class GetStateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:invocation.GetStateRequest) */ {
 public:
  GetStateRequest();
  virtual ~GetStateRequest();

  GetStateRequest(const GetStateRequest& from);

  inline GetStateRequest& operator=(const GetStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetStateRequest(GetStateRequest&& from) noexcept
    : GetStateRequest() {
    *this = ::std::move(from);
  }

  inline GetStateRequest& operator=(GetStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetStateRequest*>(
               &_GetStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(GetStateRequest* other);
  friend void swap(GetStateRequest& a, GetStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetStateRequest* New() const final {
    return CreateMaybeMessage<GetStateRequest>(nullptr);
  }

  GetStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetStateRequest& from);
  void MergeFrom(const GetStateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:invocation.GetStateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_invocation_2eproto;
};
// -------------------------------------------------------------------

class PutStateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:invocation.PutStateRequest) */ {
 public:
  PutStateRequest();
  virtual ~PutStateRequest();

  PutStateRequest(const PutStateRequest& from);

  inline PutStateRequest& operator=(const PutStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutStateRequest(PutStateRequest&& from) noexcept
    : PutStateRequest() {
    *this = ::std::move(from);
  }

  inline PutStateRequest& operator=(PutStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PutStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutStateRequest* internal_default_instance() {
    return reinterpret_cast<const PutStateRequest*>(
               &_PutStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PutStateRequest* other);
  friend void swap(PutStateRequest& a, PutStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutStateRequest* New() const final {
    return CreateMaybeMessage<PutStateRequest>(nullptr);
  }

  PutStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PutStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PutStateRequest& from);
  void MergeFrom(const PutStateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:invocation.PutStateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_invocation_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ChaincodeWrapperMessage

// .invocation.InvocationRequest invocation_request = 1;
inline bool ChaincodeWrapperMessage::has_invocation_request() const {
  return message_oneof_case() == kInvocationRequest;
}
inline void ChaincodeWrapperMessage::set_has_invocation_request() {
  _oneof_case_[0] = kInvocationRequest;
}
inline void ChaincodeWrapperMessage::clear_invocation_request() {
  if (has_invocation_request()) {
    delete message_oneof_.invocation_request_;
    clear_has_message_oneof();
  }
}
inline ::invocation::InvocationRequest* ChaincodeWrapperMessage::release_invocation_request() {
  // @@protoc_insertion_point(field_release:invocation.ChaincodeWrapperMessage.invocation_request)
  if (has_invocation_request()) {
    clear_has_message_oneof();
      ::invocation::InvocationRequest* temp = message_oneof_.invocation_request_;
    message_oneof_.invocation_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::invocation::InvocationRequest& ChaincodeWrapperMessage::invocation_request() const {
  // @@protoc_insertion_point(field_get:invocation.ChaincodeWrapperMessage.invocation_request)
  return has_invocation_request()
      ? *message_oneof_.invocation_request_
      : *reinterpret_cast< ::invocation::InvocationRequest*>(&::invocation::_InvocationRequest_default_instance_);
}
inline ::invocation::InvocationRequest* ChaincodeWrapperMessage::mutable_invocation_request() {
  if (!has_invocation_request()) {
    clear_message_oneof();
    set_has_invocation_request();
    message_oneof_.invocation_request_ = CreateMaybeMessage< ::invocation::InvocationRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:invocation.ChaincodeWrapperMessage.invocation_request)
  return message_oneof_.invocation_request_;
}

// .invocation.GetStateResponse get_state_response = 2;
inline bool ChaincodeWrapperMessage::has_get_state_response() const {
  return message_oneof_case() == kGetStateResponse;
}
inline void ChaincodeWrapperMessage::set_has_get_state_response() {
  _oneof_case_[0] = kGetStateResponse;
}
inline void ChaincodeWrapperMessage::clear_get_state_response() {
  if (has_get_state_response()) {
    delete message_oneof_.get_state_response_;
    clear_has_message_oneof();
  }
}
inline ::invocation::GetStateResponse* ChaincodeWrapperMessage::release_get_state_response() {
  // @@protoc_insertion_point(field_release:invocation.ChaincodeWrapperMessage.get_state_response)
  if (has_get_state_response()) {
    clear_has_message_oneof();
      ::invocation::GetStateResponse* temp = message_oneof_.get_state_response_;
    message_oneof_.get_state_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::invocation::GetStateResponse& ChaincodeWrapperMessage::get_state_response() const {
  // @@protoc_insertion_point(field_get:invocation.ChaincodeWrapperMessage.get_state_response)
  return has_get_state_response()
      ? *message_oneof_.get_state_response_
      : *reinterpret_cast< ::invocation::GetStateResponse*>(&::invocation::_GetStateResponse_default_instance_);
}
inline ::invocation::GetStateResponse* ChaincodeWrapperMessage::mutable_get_state_response() {
  if (!has_get_state_response()) {
    clear_message_oneof();
    set_has_get_state_response();
    message_oneof_.get_state_response_ = CreateMaybeMessage< ::invocation::GetStateResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:invocation.ChaincodeWrapperMessage.get_state_response)
  return message_oneof_.get_state_response_;
}

// .invocation.PutStateResponse put_state_response = 3;
inline bool ChaincodeWrapperMessage::has_put_state_response() const {
  return message_oneof_case() == kPutStateResponse;
}
inline void ChaincodeWrapperMessage::set_has_put_state_response() {
  _oneof_case_[0] = kPutStateResponse;
}
inline void ChaincodeWrapperMessage::clear_put_state_response() {
  if (has_put_state_response()) {
    delete message_oneof_.put_state_response_;
    clear_has_message_oneof();
  }
}
inline ::invocation::PutStateResponse* ChaincodeWrapperMessage::release_put_state_response() {
  // @@protoc_insertion_point(field_release:invocation.ChaincodeWrapperMessage.put_state_response)
  if (has_put_state_response()) {
    clear_has_message_oneof();
      ::invocation::PutStateResponse* temp = message_oneof_.put_state_response_;
    message_oneof_.put_state_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::invocation::PutStateResponse& ChaincodeWrapperMessage::put_state_response() const {
  // @@protoc_insertion_point(field_get:invocation.ChaincodeWrapperMessage.put_state_response)
  return has_put_state_response()
      ? *message_oneof_.put_state_response_
      : *reinterpret_cast< ::invocation::PutStateResponse*>(&::invocation::_PutStateResponse_default_instance_);
}
inline ::invocation::PutStateResponse* ChaincodeWrapperMessage::mutable_put_state_response() {
  if (!has_put_state_response()) {
    clear_message_oneof();
    set_has_put_state_response();
    message_oneof_.put_state_response_ = CreateMaybeMessage< ::invocation::PutStateResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:invocation.ChaincodeWrapperMessage.put_state_response)
  return message_oneof_.put_state_response_;
}

inline bool ChaincodeWrapperMessage::has_message_oneof() const {
  return message_oneof_case() != MESSAGE_ONEOF_NOT_SET;
}
inline void ChaincodeWrapperMessage::clear_has_message_oneof() {
  _oneof_case_[0] = MESSAGE_ONEOF_NOT_SET;
}
inline ChaincodeWrapperMessage::MessageOneofCase ChaincodeWrapperMessage::message_oneof_case() const {
  return ChaincodeWrapperMessage::MessageOneofCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// InvocationRequest

// bytes chaincode_uuid = 1;
inline void InvocationRequest::clear_chaincode_uuid() {
  chaincode_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvocationRequest::chaincode_uuid() const {
  // @@protoc_insertion_point(field_get:invocation.InvocationRequest.chaincode_uuid)
  return chaincode_uuid_.GetNoArena();
}
inline void InvocationRequest::set_chaincode_uuid(const ::std::string& value) {
  
  chaincode_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:invocation.InvocationRequest.chaincode_uuid)
}
#if LANG_CXX11
inline void InvocationRequest::set_chaincode_uuid(::std::string&& value) {
  
  chaincode_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:invocation.InvocationRequest.chaincode_uuid)
}
#endif
inline void InvocationRequest::set_chaincode_uuid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  chaincode_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:invocation.InvocationRequest.chaincode_uuid)
}
inline void InvocationRequest::set_chaincode_uuid(const void* value, size_t size) {
  
  chaincode_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:invocation.InvocationRequest.chaincode_uuid)
}
inline ::std::string* InvocationRequest::mutable_chaincode_uuid() {
  
  // @@protoc_insertion_point(field_mutable:invocation.InvocationRequest.chaincode_uuid)
  return chaincode_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvocationRequest::release_chaincode_uuid() {
  // @@protoc_insertion_point(field_release:invocation.InvocationRequest.chaincode_uuid)
  
  return chaincode_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvocationRequest::set_allocated_chaincode_uuid(::std::string* chaincode_uuid) {
  if (chaincode_uuid != nullptr) {
    
  } else {
    
  }
  chaincode_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaincode_uuid);
  // @@protoc_insertion_point(field_set_allocated:invocation.InvocationRequest.chaincode_uuid)
}

// string function_name = 2;
inline void InvocationRequest::clear_function_name() {
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvocationRequest::function_name() const {
  // @@protoc_insertion_point(field_get:invocation.InvocationRequest.function_name)
  return function_name_.GetNoArena();
}
inline void InvocationRequest::set_function_name(const ::std::string& value) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:invocation.InvocationRequest.function_name)
}
#if LANG_CXX11
inline void InvocationRequest::set_function_name(::std::string&& value) {
  
  function_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:invocation.InvocationRequest.function_name)
}
#endif
inline void InvocationRequest::set_function_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:invocation.InvocationRequest.function_name)
}
inline void InvocationRequest::set_function_name(const char* value, size_t size) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:invocation.InvocationRequest.function_name)
}
inline ::std::string* InvocationRequest::mutable_function_name() {
  
  // @@protoc_insertion_point(field_mutable:invocation.InvocationRequest.function_name)
  return function_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvocationRequest::release_function_name() {
  // @@protoc_insertion_point(field_release:invocation.InvocationRequest.function_name)
  
  return function_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvocationRequest::set_allocated_function_name(::std::string* function_name) {
  if (function_name != nullptr) {
    
  } else {
    
  }
  function_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function_name);
  // @@protoc_insertion_point(field_set_allocated:invocation.InvocationRequest.function_name)
}

// repeated string arguments = 3;
inline int InvocationRequest::arguments_size() const {
  return arguments_.size();
}
inline void InvocationRequest::clear_arguments() {
  arguments_.Clear();
}
inline const ::std::string& InvocationRequest::arguments(int index) const {
  // @@protoc_insertion_point(field_get:invocation.InvocationRequest.arguments)
  return arguments_.Get(index);
}
inline ::std::string* InvocationRequest::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:invocation.InvocationRequest.arguments)
  return arguments_.Mutable(index);
}
inline void InvocationRequest::set_arguments(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:invocation.InvocationRequest.arguments)
  arguments_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void InvocationRequest::set_arguments(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:invocation.InvocationRequest.arguments)
  arguments_.Mutable(index)->assign(std::move(value));
}
#endif
inline void InvocationRequest::set_arguments(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  arguments_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:invocation.InvocationRequest.arguments)
}
inline void InvocationRequest::set_arguments(int index, const char* value, size_t size) {
  arguments_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:invocation.InvocationRequest.arguments)
}
inline ::std::string* InvocationRequest::add_arguments() {
  // @@protoc_insertion_point(field_add_mutable:invocation.InvocationRequest.arguments)
  return arguments_.Add();
}
inline void InvocationRequest::add_arguments(const ::std::string& value) {
  arguments_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:invocation.InvocationRequest.arguments)
}
#if LANG_CXX11
inline void InvocationRequest::add_arguments(::std::string&& value) {
  arguments_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:invocation.InvocationRequest.arguments)
}
#endif
inline void InvocationRequest::add_arguments(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  arguments_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:invocation.InvocationRequest.arguments)
}
inline void InvocationRequest::add_arguments(const char* value, size_t size) {
  arguments_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:invocation.InvocationRequest.arguments)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
InvocationRequest::arguments() const {
  // @@protoc_insertion_point(field_list:invocation.InvocationRequest.arguments)
  return arguments_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
InvocationRequest::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:invocation.InvocationRequest.arguments)
  return &arguments_;
}

// -------------------------------------------------------------------

// GetStateResponse

// string value = 1;
inline void GetStateResponse::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateResponse::value() const {
  // @@protoc_insertion_point(field_get:invocation.GetStateResponse.value)
  return value_.GetNoArena();
}
inline void GetStateResponse::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:invocation.GetStateResponse.value)
}
#if LANG_CXX11
inline void GetStateResponse::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:invocation.GetStateResponse.value)
}
#endif
inline void GetStateResponse::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:invocation.GetStateResponse.value)
}
inline void GetStateResponse::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:invocation.GetStateResponse.value)
}
inline ::std::string* GetStateResponse::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:invocation.GetStateResponse.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateResponse::release_value() {
  // @@protoc_insertion_point(field_release:invocation.GetStateResponse.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateResponse::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:invocation.GetStateResponse.value)
}

// -------------------------------------------------------------------

// PutStateResponse

// string acknowledgement = 1;
inline void PutStateResponse::clear_acknowledgement() {
  acknowledgement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutStateResponse::acknowledgement() const {
  // @@protoc_insertion_point(field_get:invocation.PutStateResponse.acknowledgement)
  return acknowledgement_.GetNoArena();
}
inline void PutStateResponse::set_acknowledgement(const ::std::string& value) {
  
  acknowledgement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:invocation.PutStateResponse.acknowledgement)
}
#if LANG_CXX11
inline void PutStateResponse::set_acknowledgement(::std::string&& value) {
  
  acknowledgement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:invocation.PutStateResponse.acknowledgement)
}
#endif
inline void PutStateResponse::set_acknowledgement(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  acknowledgement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:invocation.PutStateResponse.acknowledgement)
}
inline void PutStateResponse::set_acknowledgement(const char* value, size_t size) {
  
  acknowledgement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:invocation.PutStateResponse.acknowledgement)
}
inline ::std::string* PutStateResponse::mutable_acknowledgement() {
  
  // @@protoc_insertion_point(field_mutable:invocation.PutStateResponse.acknowledgement)
  return acknowledgement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutStateResponse::release_acknowledgement() {
  // @@protoc_insertion_point(field_release:invocation.PutStateResponse.acknowledgement)
  
  return acknowledgement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutStateResponse::set_allocated_acknowledgement(::std::string* acknowledgement) {
  if (acknowledgement != nullptr) {
    
  } else {
    
  }
  acknowledgement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acknowledgement);
  // @@protoc_insertion_point(field_set_allocated:invocation.PutStateResponse.acknowledgement)
}

// -------------------------------------------------------------------

// ChaincodeProxyMessage

// .invocation.InvocationResponse invocation_response = 1;
inline bool ChaincodeProxyMessage::has_invocation_response() const {
  return type_case() == kInvocationResponse;
}
inline void ChaincodeProxyMessage::set_has_invocation_response() {
  _oneof_case_[0] = kInvocationResponse;
}
inline void ChaincodeProxyMessage::clear_invocation_response() {
  if (has_invocation_response()) {
    delete type_.invocation_response_;
    clear_has_type();
  }
}
inline ::invocation::InvocationResponse* ChaincodeProxyMessage::release_invocation_response() {
  // @@protoc_insertion_point(field_release:invocation.ChaincodeProxyMessage.invocation_response)
  if (has_invocation_response()) {
    clear_has_type();
      ::invocation::InvocationResponse* temp = type_.invocation_response_;
    type_.invocation_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::invocation::InvocationResponse& ChaincodeProxyMessage::invocation_response() const {
  // @@protoc_insertion_point(field_get:invocation.ChaincodeProxyMessage.invocation_response)
  return has_invocation_response()
      ? *type_.invocation_response_
      : *reinterpret_cast< ::invocation::InvocationResponse*>(&::invocation::_InvocationResponse_default_instance_);
}
inline ::invocation::InvocationResponse* ChaincodeProxyMessage::mutable_invocation_response() {
  if (!has_invocation_response()) {
    clear_type();
    set_has_invocation_response();
    type_.invocation_response_ = CreateMaybeMessage< ::invocation::InvocationResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:invocation.ChaincodeProxyMessage.invocation_response)
  return type_.invocation_response_;
}

// .invocation.GetStateRequest get_state_request = 2;
inline bool ChaincodeProxyMessage::has_get_state_request() const {
  return type_case() == kGetStateRequest;
}
inline void ChaincodeProxyMessage::set_has_get_state_request() {
  _oneof_case_[0] = kGetStateRequest;
}
inline void ChaincodeProxyMessage::clear_get_state_request() {
  if (has_get_state_request()) {
    delete type_.get_state_request_;
    clear_has_type();
  }
}
inline ::invocation::GetStateRequest* ChaincodeProxyMessage::release_get_state_request() {
  // @@protoc_insertion_point(field_release:invocation.ChaincodeProxyMessage.get_state_request)
  if (has_get_state_request()) {
    clear_has_type();
      ::invocation::GetStateRequest* temp = type_.get_state_request_;
    type_.get_state_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::invocation::GetStateRequest& ChaincodeProxyMessage::get_state_request() const {
  // @@protoc_insertion_point(field_get:invocation.ChaincodeProxyMessage.get_state_request)
  return has_get_state_request()
      ? *type_.get_state_request_
      : *reinterpret_cast< ::invocation::GetStateRequest*>(&::invocation::_GetStateRequest_default_instance_);
}
inline ::invocation::GetStateRequest* ChaincodeProxyMessage::mutable_get_state_request() {
  if (!has_get_state_request()) {
    clear_type();
    set_has_get_state_request();
    type_.get_state_request_ = CreateMaybeMessage< ::invocation::GetStateRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:invocation.ChaincodeProxyMessage.get_state_request)
  return type_.get_state_request_;
}

// .invocation.PutStateRequest put_state_request = 3;
inline bool ChaincodeProxyMessage::has_put_state_request() const {
  return type_case() == kPutStateRequest;
}
inline void ChaincodeProxyMessage::set_has_put_state_request() {
  _oneof_case_[0] = kPutStateRequest;
}
inline void ChaincodeProxyMessage::clear_put_state_request() {
  if (has_put_state_request()) {
    delete type_.put_state_request_;
    clear_has_type();
  }
}
inline ::invocation::PutStateRequest* ChaincodeProxyMessage::release_put_state_request() {
  // @@protoc_insertion_point(field_release:invocation.ChaincodeProxyMessage.put_state_request)
  if (has_put_state_request()) {
    clear_has_type();
      ::invocation::PutStateRequest* temp = type_.put_state_request_;
    type_.put_state_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::invocation::PutStateRequest& ChaincodeProxyMessage::put_state_request() const {
  // @@protoc_insertion_point(field_get:invocation.ChaincodeProxyMessage.put_state_request)
  return has_put_state_request()
      ? *type_.put_state_request_
      : *reinterpret_cast< ::invocation::PutStateRequest*>(&::invocation::_PutStateRequest_default_instance_);
}
inline ::invocation::PutStateRequest* ChaincodeProxyMessage::mutable_put_state_request() {
  if (!has_put_state_request()) {
    clear_type();
    set_has_put_state_request();
    type_.put_state_request_ = CreateMaybeMessage< ::invocation::PutStateRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:invocation.ChaincodeProxyMessage.put_state_request)
  return type_.put_state_request_;
}

inline bool ChaincodeProxyMessage::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void ChaincodeProxyMessage::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline ChaincodeProxyMessage::TypeCase ChaincodeProxyMessage::type_case() const {
  return ChaincodeProxyMessage::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// InvocationResponse

// bytes execution_response = 1;
inline void InvocationResponse::clear_execution_response() {
  execution_response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvocationResponse::execution_response() const {
  // @@protoc_insertion_point(field_get:invocation.InvocationResponse.execution_response)
  return execution_response_.GetNoArena();
}
inline void InvocationResponse::set_execution_response(const ::std::string& value) {
  
  execution_response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:invocation.InvocationResponse.execution_response)
}
#if LANG_CXX11
inline void InvocationResponse::set_execution_response(::std::string&& value) {
  
  execution_response_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:invocation.InvocationResponse.execution_response)
}
#endif
inline void InvocationResponse::set_execution_response(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  execution_response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:invocation.InvocationResponse.execution_response)
}
inline void InvocationResponse::set_execution_response(const void* value, size_t size) {
  
  execution_response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:invocation.InvocationResponse.execution_response)
}
inline ::std::string* InvocationResponse::mutable_execution_response() {
  
  // @@protoc_insertion_point(field_mutable:invocation.InvocationResponse.execution_response)
  return execution_response_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvocationResponse::release_execution_response() {
  // @@protoc_insertion_point(field_release:invocation.InvocationResponse.execution_response)
  
  return execution_response_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvocationResponse::set_allocated_execution_response(::std::string* execution_response) {
  if (execution_response != nullptr) {
    
  } else {
    
  }
  execution_response_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), execution_response);
  // @@protoc_insertion_point(field_set_allocated:invocation.InvocationResponse.execution_response)
}

// -------------------------------------------------------------------

// GetStateRequest

// string key = 1;
inline void GetStateRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateRequest::key() const {
  // @@protoc_insertion_point(field_get:invocation.GetStateRequest.key)
  return key_.GetNoArena();
}
inline void GetStateRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:invocation.GetStateRequest.key)
}
#if LANG_CXX11
inline void GetStateRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:invocation.GetStateRequest.key)
}
#endif
inline void GetStateRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:invocation.GetStateRequest.key)
}
inline void GetStateRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:invocation.GetStateRequest.key)
}
inline ::std::string* GetStateRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:invocation.GetStateRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateRequest::release_key() {
  // @@protoc_insertion_point(field_release:invocation.GetStateRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateRequest::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:invocation.GetStateRequest.key)
}

// -------------------------------------------------------------------

// PutStateRequest

// string key = 1;
inline void PutStateRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutStateRequest::key() const {
  // @@protoc_insertion_point(field_get:invocation.PutStateRequest.key)
  return key_.GetNoArena();
}
inline void PutStateRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:invocation.PutStateRequest.key)
}
#if LANG_CXX11
inline void PutStateRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:invocation.PutStateRequest.key)
}
#endif
inline void PutStateRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:invocation.PutStateRequest.key)
}
inline void PutStateRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:invocation.PutStateRequest.key)
}
inline ::std::string* PutStateRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:invocation.PutStateRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutStateRequest::release_key() {
  // @@protoc_insertion_point(field_release:invocation.PutStateRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutStateRequest::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:invocation.PutStateRequest.key)
}

// string value = 2;
inline void PutStateRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutStateRequest::value() const {
  // @@protoc_insertion_point(field_get:invocation.PutStateRequest.value)
  return value_.GetNoArena();
}
inline void PutStateRequest::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:invocation.PutStateRequest.value)
}
#if LANG_CXX11
inline void PutStateRequest::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:invocation.PutStateRequest.value)
}
#endif
inline void PutStateRequest::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:invocation.PutStateRequest.value)
}
inline void PutStateRequest::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:invocation.PutStateRequest.value)
}
inline ::std::string* PutStateRequest::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:invocation.PutStateRequest.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutStateRequest::release_value() {
  // @@protoc_insertion_point(field_release:invocation.PutStateRequest.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutStateRequest::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:invocation.PutStateRequest.value)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace invocation

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_invocation_2eproto
